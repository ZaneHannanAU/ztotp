{"version":3,"file":"totp-uri.js","sourceRoot":"","sources":["../src/totp-uri.ts"],"names":[],"mappings":"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","sourcesContent":["import { URL } from 'url'\nimport { encode } from 'buf-b32'\nconst baseURI = 'otpauth://totp/'\nlet warning_alg = 0, warning_epo = 0, warning_dig = 0, warning_per = 0\n\nexport const encSecret = (buf:ArrayBufferView):string => encode(buf, true)\n\t.replace(/=+/g, '')\n\nexport function toURILong (\n\tkey: ArrayBufferView | string,\n\tkeyEnc:string = 'buffer',\n\tacc:string = 'ERRACCOUTNAMEGOESHERE',\n\tiss:string = 'ERRSERVICEISSUERGOESHERE',\n\tlen:number = 6,\n\talg:string = 'sha1',\n\tT0:number = 0,\n\tTI:number = 30\n) {\n\tconst uri = new URL(baseURI + acc + ':' + iss), sp = uri.searchParams\n\tswitch (keyEnc) {\n\t\tcase 'buffer':\n\t\t\tsp.set(\n\t\t\t\t'secret',\n\t\t\t\tBuffer.isBuffer(key)\n\t\t\t\t? encSecret(key)\n\t\t\t\t: 'string' === typeof key\n\t\t\t\t? key\n\t\t\t\t: encSecret(key)\n\t\t\t)\n\t\t\tbreak\n\t\tcase 'string':\n\t\tcase 'base32':\n\t\tdefault:\n\t\t\tsp.set('secret', String(key))\n\t\t\tbreak\n\t}\n\tsp.set('issuer', iss)\n\tsp.set('account', acc)\n\tsp.set('algorithm', alg.toUpperCase())\n\tif (alg.toUpperCase() !== 'SHA1' && !warning_alg++) process.emitWarning('[ztotp/totp-uri] Algorithms other than SHA1 may not be used by Google Authenticator; ensure your user has a working method and/or options to set algorithm.')\n\tsp.set('epoch', String(T0))\n\tif (T0 !== 0 && !warning_epo++) process.emitWarning('[ztotp/totp-uri] An epoch other than 0 is mostly unsupported; ensure your user has a working method and/or options to change epoch.')\n\tsp.set('period', String(TI))\n\tif (TI !== 30 && !warning_per++) process.emitWarning('[ztotp/totp-uri] Intervals other than 30 may not be used by Google Authenticator; ensure your user has a working method and/or options to set interval.')\n\tsp.set('digits', String(len))\n\tif (len !== 6 && !warning_dig++) process.emitWarning('[ztotp/totp-uri] Lengths other than 6 may not be used by Google Authenticator; ensure your user has a working method and/or options to set length.')\n\treturn uri.toString()\n}\n\ninterface TOTP_URI_Options {\n\tsecret:ArrayBufferView | string;\n\n\tsecretEnc?: string;\n\t\n\tname?: string;\n\n\tissuer?: string;\n\n\tlength?: number;\n\tlen?: number;\n\tdigits?: number;\n\n\talgorithm?: string;\n\tdigest?: string;\n\talg?: string\n\n\tepoch?: number;\n\tinit?: number;\n\tT0?: number;\n\n\tperiod?: number;\n\tsteps?: number;\n\tTI?: number;\n}\n\nexport const toURI = ({\n\tsecret,\n\tsecretEnc = 'string' === typeof secret ? 'string' : 'buffer',\n\tname = 'ERRACCOUNTNAMEGOESHERE',\n\tissuer = 'ERRSERVICEISSUERGOESHERE',\n\tlength = 6, digits = length, len = digits,\n\talgorithm = 'sha1', digest = algorithm, alg = digest,\n\tepoch = 0, init = epoch, T0 = init,\n\tperiod = 30, steps = period, TI = steps\n}:TOTP_URI_Options):string => toURILong(secret, secretEnc, name, issuer, len, alg, T0, TI)\nexport default toURI\n"]}