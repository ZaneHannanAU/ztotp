{"version":3,"file":"totp-uri.js","sourceRoot":"","sources":["../src/totp-uri.ts"],"names":[],"mappings":";;AAAA,6BAAyB;AACzB,qCAAgC;AAChC,MAAM,OAAO,GAAG,iBAAiB,CAAA;AAEpB,QAAA,SAAS,GAAG,CAAC,GAAmB,EAAS,EAAE,CAAC,gBAAM,CAAC,GAAG,EAAE,IAAI,CAAC;KACxE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;AAEpB,mBACC,GAA6B,EAC7B,SAAgB,QAAQ,EACxB,MAAa,uBAAuB,EACpC,MAAa,0BAA0B,EACvC,MAAa,CAAC,EACd,MAAa,MAAM,EACnB,KAAY,CAAC,EACb,KAAY,EAAE;IAEd,MAAM,GAAG,GAAG,IAAI,SAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,YAAY,CAAA;IACpE,QAAQ,MAAM,EAAE;QACf,KAAK,QAAQ;YACZ,EAAE,CAAC,GAAG,CACL,QAAQ,EACR,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;gBACpB,CAAC,CAAC,iBAAS,CAAC,GAAG,CAAC;gBAChB,CAAC,CAAC,QAAQ,KAAK,OAAO,GAAG;oBACzB,CAAC,CAAC,GAAG;oBACL,CAAC,CAAC,iBAAS,CAAC,GAAG,CAAC,CAChB,CAAA;YACD,MAAK;QACN,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ,CAAC;QACd;YACC,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YAC7B,MAAK;KACN;IACD,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;IACrB,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAA;IACtB,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,WAAW,EAAE,CAAC,CAAA;IACtC,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;IAC3B,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;IAC5B,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;IAC7B,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAA;AACtB,CAAC;AAnCD,8BAmCC;AAgCY,QAAA,KAAK,GAAG,CAAC,EACrB,MAAM,EAAE,GAAG,GAAG,MAAM,EACpB,SAAS,GAAG,QAAQ,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EACxD,MAAM,GAAG,SAAS,EACnB,IAAI,GAAG,wBAAwB,EAAE,OAAO,GAAG,IAAI,EAC/C,OAAO,GAAG,0BAA0B,EAAE,MAAM,GAAG,OAAO,EACtD,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,EAAE,GAAG,GAAG,MAAM,EACzC,SAAS,GAAG,MAAM,EAAE,MAAM,GAAG,SAAS,EAAE,GAAG,GAAG,MAAM,EACpD,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,EAAE,GAAG,IAAI,EAClC,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,MAAM,EAAE,EAAE,GAAG,KAAK,EACtB,EAAS,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;AACvF,kBAAe,aAAK,CAAA","sourcesContent":["import { URL } from 'url'\nimport { encode } from 'buf-b32'\nconst baseURI = 'otpauth://totp/'\n\nexport const encSecret = (buf:ArrayBufferView):string => encode(buf, true)\n\t.replace(/=+/g, '')\n\nexport function toURILong (\n\tkey: ArrayBufferView | string,\n\tkeyEnc:string = 'buffer',\n\tacc:string = 'ERRACCOUTNAMEGOESHERE',\n\tiss:string = 'ERRSERVICEISSUERGOESHERE',\n\tlen:number = 6,\n\talg:string = 'sha1',\n\tT0:number = 0,\n\tTI:number = 30\n) {\n\tconst uri = new URL(acc + ':' + iss, baseURI), sp = uri.searchParams\n\tswitch (keyEnc) {\n\t\tcase 'buffer':\n\t\t\tsp.set(\n\t\t\t\t'secret',\n\t\t\t\tBuffer.isBuffer(key)\n\t\t\t\t? encSecret(key)\n\t\t\t\t: 'string' === typeof key\n\t\t\t\t? key\n\t\t\t\t: encSecret(key)\n\t\t\t)\n\t\t\tbreak\n\t\tcase 'string':\n\t\tcase 'base32':\n\t\tdefault:\n\t\t\tsp.set('secret', String(key))\n\t\t\tbreak\n\t}\n\tsp.set('issuer', iss)\n\tsp.set('account', acc)\n\tsp.set('algorithm', alg.toUpperCase())\n\tsp.set('epoch', String(T0))\n\tsp.set('period', String(TI))\n\tsp.set('digits', String(len))\n\treturn uri.toString()\n}\n\ninterface TOTP_URI_Options {\n\tsecret:ArrayBufferView | string;\n\tkey:ArrayBufferView | string;\n\n\tsecretEnc: string;\n\tkeyEnc: string;\n\t\n\tname: string;\n\taccount: string;\n\n\tservice: string;\n\tissuer: string;\n\n\tlength: number;\n\tlen: number;\n\tdigits: number;\n\n\talgorithm: string;\n\tdigest: string;\n\talg: string\n\n\tepoch: number;\n\tinit: number;\n\tT0: number;\n\n\tperiod: number;\n\tsteps: number;\n\tTI: number;\n}\n\nexport const toURI = ({\n\tsecret, key = secret,\n\tsecretEnc = 'string' === typeof key ? 'string' : 'buffer',\n\t\tkeyEnc = secretEnc,\n\tname = 'ERRACCOUNTNAMEGOESHERE', account = name,\n\tservice = 'ERRSERVICEISSUERGOESHERE', issuer = service,\n\tlength = 6, digits = length, len = digits,\n\talgorithm = 'sha1', digest = algorithm, alg = digest,\n\tepoch = 0, init = epoch, T0 = init,\n\tperiod = 30, steps = period, TI = steps\n}:TOTP_URI_Options):string => toURILong(key, keyEnc, account, issuer, len, alg, T0, TI)\nexport default toURI\n"]}